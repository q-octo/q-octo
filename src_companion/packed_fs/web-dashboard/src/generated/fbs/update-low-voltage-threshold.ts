// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class UpdateLowVoltageThreshold implements flatbuffers.IUnpackableObject<UpdateLowVoltageThresholdT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):UpdateLowVoltageThreshold {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsUpdateLowVoltageThreshold(bb:flatbuffers.ByteBuffer, obj?:UpdateLowVoltageThreshold):UpdateLowVoltageThreshold {
  return (obj || new UpdateLowVoltageThreshold()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsUpdateLowVoltageThreshold(bb:flatbuffers.ByteBuffer, obj?:UpdateLowVoltageThreshold):UpdateLowVoltageThreshold {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new UpdateLowVoltageThreshold()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

lowVoltageThreshold():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static startUpdateLowVoltageThreshold(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addLowVoltageThreshold(builder:flatbuffers.Builder, lowVoltageThreshold:number) {
  builder.addFieldFloat32(0, lowVoltageThreshold, 0.0);
}

static endUpdateLowVoltageThreshold(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createUpdateLowVoltageThreshold(builder:flatbuffers.Builder, lowVoltageThreshold:number):flatbuffers.Offset {
  UpdateLowVoltageThreshold.startUpdateLowVoltageThreshold(builder);
  UpdateLowVoltageThreshold.addLowVoltageThreshold(builder, lowVoltageThreshold);
  return UpdateLowVoltageThreshold.endUpdateLowVoltageThreshold(builder);
}

unpack(): UpdateLowVoltageThresholdT {
  return new UpdateLowVoltageThresholdT(
    this.lowVoltageThreshold()
  );
}


unpackTo(_o: UpdateLowVoltageThresholdT): void {
  _o.lowVoltageThreshold = this.lowVoltageThreshold();
}
}

export class UpdateLowVoltageThresholdT implements flatbuffers.IGeneratedObject {
constructor(
  public lowVoltageThreshold: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return UpdateLowVoltageThreshold.createUpdateLowVoltageThreshold(builder,
    this.lowVoltageThreshold
  );
}
}
