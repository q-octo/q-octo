// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class UpdateCriticalVoltageThreshold implements flatbuffers.IUnpackableObject<UpdateCriticalVoltageThresholdT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):UpdateCriticalVoltageThreshold {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsUpdateCriticalVoltageThreshold(bb:flatbuffers.ByteBuffer, obj?:UpdateCriticalVoltageThreshold):UpdateCriticalVoltageThreshold {
  return (obj || new UpdateCriticalVoltageThreshold()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsUpdateCriticalVoltageThreshold(bb:flatbuffers.ByteBuffer, obj?:UpdateCriticalVoltageThreshold):UpdateCriticalVoltageThreshold {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new UpdateCriticalVoltageThreshold()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

criticalVoltageThreshold():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static startUpdateCriticalVoltageThreshold(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addCriticalVoltageThreshold(builder:flatbuffers.Builder, criticalVoltageThreshold:number) {
  builder.addFieldFloat32(0, criticalVoltageThreshold, 0.0);
}

static endUpdateCriticalVoltageThreshold(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createUpdateCriticalVoltageThreshold(builder:flatbuffers.Builder, criticalVoltageThreshold:number):flatbuffers.Offset {
  UpdateCriticalVoltageThreshold.startUpdateCriticalVoltageThreshold(builder);
  UpdateCriticalVoltageThreshold.addCriticalVoltageThreshold(builder, criticalVoltageThreshold);
  return UpdateCriticalVoltageThreshold.endUpdateCriticalVoltageThreshold(builder);
}

unpack(): UpdateCriticalVoltageThresholdT {
  return new UpdateCriticalVoltageThresholdT(
    this.criticalVoltageThreshold()
  );
}


unpackTo(_o: UpdateCriticalVoltageThresholdT): void {
  _o.criticalVoltageThreshold = this.criticalVoltageThreshold();
}
}

export class UpdateCriticalVoltageThresholdT implements flatbuffers.IGeneratedObject {
constructor(
  public criticalVoltageThreshold: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return UpdateCriticalVoltageThreshold.createUpdateCriticalVoltageThreshold(builder,
    this.criticalVoltageThreshold
  );
}
}
