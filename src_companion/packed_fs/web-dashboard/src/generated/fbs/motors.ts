// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { Motor, MotorT } from '../fbs/motor.js';


export class Motors implements flatbuffers.IUnpackableObject<MotorsT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Motors {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMotors(bb:flatbuffers.ByteBuffer, obj?:Motors):Motors {
  return (obj || new Motors()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMotors(bb:flatbuffers.ByteBuffer, obj?:Motors):Motors {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Motors()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

motor1(obj?:Motor):Motor|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Motor()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

motor2(obj?:Motor):Motor|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Motor()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startMotors(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addMotor1(builder:flatbuffers.Builder, motor1Offset:flatbuffers.Offset) {
  builder.addFieldOffset(0, motor1Offset, 0);
}

static addMotor2(builder:flatbuffers.Builder, motor2Offset:flatbuffers.Offset) {
  builder.addFieldOffset(1, motor2Offset, 0);
}

static endMotors(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): MotorsT {
  return new MotorsT(
    (this.motor1() !== null ? this.motor1()!.unpack() : null),
    (this.motor2() !== null ? this.motor2()!.unpack() : null)
  );
}


unpackTo(_o: MotorsT): void {
  _o.motor1 = (this.motor1() !== null ? this.motor1()!.unpack() : null);
  _o.motor2 = (this.motor2() !== null ? this.motor2()!.unpack() : null);
}
}

export class MotorsT implements flatbuffers.IGeneratedObject {
constructor(
  public motor1: MotorT|null = null,
  public motor2: MotorT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const motor1 = (this.motor1 !== null ? this.motor1!.pack(builder) : 0);
  const motor2 = (this.motor2 !== null ? this.motor2!.pack(builder) : 0);

  Motors.startMotors(builder);
  Motors.addMotor1(builder, motor1);
  Motors.addMotor2(builder, motor2);

  return Motors.endMotors(builder);
}
}
