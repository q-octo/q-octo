// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class UpdateCrsfLinkStatsTimeout implements flatbuffers.IUnpackableObject<UpdateCrsfLinkStatsTimeoutT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):UpdateCrsfLinkStatsTimeout {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsUpdateCrsfLinkStatsTimeout(bb:flatbuffers.ByteBuffer, obj?:UpdateCrsfLinkStatsTimeout):UpdateCrsfLinkStatsTimeout {
  return (obj || new UpdateCrsfLinkStatsTimeout()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsUpdateCrsfLinkStatsTimeout(bb:flatbuffers.ByteBuffer, obj?:UpdateCrsfLinkStatsTimeout):UpdateCrsfLinkStatsTimeout {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new UpdateCrsfLinkStatsTimeout()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

timeoutMillis():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startUpdateCrsfLinkStatsTimeout(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addTimeoutMillis(builder:flatbuffers.Builder, timeoutMillis:number) {
  builder.addFieldInt32(0, timeoutMillis, 0);
}

static endUpdateCrsfLinkStatsTimeout(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createUpdateCrsfLinkStatsTimeout(builder:flatbuffers.Builder, timeoutMillis:number):flatbuffers.Offset {
  UpdateCrsfLinkStatsTimeout.startUpdateCrsfLinkStatsTimeout(builder);
  UpdateCrsfLinkStatsTimeout.addTimeoutMillis(builder, timeoutMillis);
  return UpdateCrsfLinkStatsTimeout.endUpdateCrsfLinkStatsTimeout(builder);
}

unpack(): UpdateCrsfLinkStatsTimeoutT {
  return new UpdateCrsfLinkStatsTimeoutT(
    this.timeoutMillis()
  );
}


unpackTo(_o: UpdateCrsfLinkStatsTimeoutT): void {
  _o.timeoutMillis = this.timeoutMillis();
}
}

export class UpdateCrsfLinkStatsTimeoutT implements flatbuffers.IGeneratedObject {
constructor(
  public timeoutMillis: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return UpdateCrsfLinkStatsTimeout.createUpdateCrsfLinkStatsTimeout(builder,
    this.timeoutMillis
  );
}
}
