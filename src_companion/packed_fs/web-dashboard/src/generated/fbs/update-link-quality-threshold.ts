// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class UpdateLinkQualityThreshold implements flatbuffers.IUnpackableObject<UpdateLinkQualityThresholdT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):UpdateLinkQualityThreshold {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsUpdateLinkQualityThreshold(bb:flatbuffers.ByteBuffer, obj?:UpdateLinkQualityThreshold):UpdateLinkQualityThreshold {
  return (obj || new UpdateLinkQualityThreshold()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsUpdateLinkQualityThreshold(bb:flatbuffers.ByteBuffer, obj?:UpdateLinkQualityThreshold):UpdateLinkQualityThreshold {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new UpdateLinkQualityThreshold()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

linkQualityThreshold():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startUpdateLinkQualityThreshold(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addLinkQualityThreshold(builder:flatbuffers.Builder, linkQualityThreshold:number) {
  builder.addFieldInt32(0, linkQualityThreshold, 0);
}

static endUpdateLinkQualityThreshold(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createUpdateLinkQualityThreshold(builder:flatbuffers.Builder, linkQualityThreshold:number):flatbuffers.Offset {
  UpdateLinkQualityThreshold.startUpdateLinkQualityThreshold(builder);
  UpdateLinkQualityThreshold.addLinkQualityThreshold(builder, linkQualityThreshold);
  return UpdateLinkQualityThreshold.endUpdateLinkQualityThreshold(builder);
}

unpack(): UpdateLinkQualityThresholdT {
  return new UpdateLinkQualityThresholdT(
    this.linkQualityThreshold()
  );
}


unpackTo(_o: UpdateLinkQualityThresholdT): void {
  _o.linkQualityThreshold = this.linkQualityThreshold();
}
}

export class UpdateLinkQualityThresholdT implements flatbuffers.IGeneratedObject {
constructor(
  public linkQualityThreshold: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return UpdateLinkQualityThreshold.createUpdateLinkQualityThreshold(builder,
    this.linkQualityThreshold
  );
}
}
