# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MotorControl

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SetSpeedRef(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SetSpeedRef()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSetSpeedRef(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # SetSpeedRef
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SetSpeedRef
    def SpeedRef(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def SetSpeedRefStart(builder):
    builder.StartObject(1)

def Start(builder):
    SetSpeedRefStart(builder)

def SetSpeedRefAddSpeedRef(builder, speedRef):
    builder.PrependFloat32Slot(0, speedRef, 0.0)

def AddSpeedRef(builder, speedRef):
    SetSpeedRefAddSpeedRef(builder, speedRef)

def SetSpeedRefEnd(builder):
    return builder.EndObject()

def End(builder):
    return SetSpeedRefEnd(builder)


class SetSpeedRefT(object):

    # SetSpeedRefT
    def __init__(self):
        self.speedRef = 0.0  # type: float

    @classmethod
    def InitFromBuf(cls, buf, pos):
        setSpeedRef = SetSpeedRef()
        setSpeedRef.Init(buf, pos)
        return cls.InitFromObj(setSpeedRef)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, setSpeedRef):
        x = SetSpeedRefT()
        x._UnPack(setSpeedRef)
        return x

    # SetSpeedRefT
    def _UnPack(self, setSpeedRef):
        if setSpeedRef is None:
            return
        self.speedRef = setSpeedRef.SpeedRef()

    # SetSpeedRefT
    def Pack(self, builder):
        SetSpeedRefStart(builder)
        SetSpeedRefAddSpeedRef(builder, self.speedRef)
        setSpeedRef = SetSpeedRefEnd(builder)
        return setSpeedRef
