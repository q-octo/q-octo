# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MotorControl

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SetSpeedKp(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SetSpeedKp()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSetSpeedKp(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # SetSpeedKp
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SetSpeedKp
    def Kp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def SetSpeedKpStart(builder):
    builder.StartObject(1)

def Start(builder):
    SetSpeedKpStart(builder)

def SetSpeedKpAddKp(builder, kp):
    builder.PrependFloat32Slot(0, kp, 0.0)

def AddKp(builder, kp):
    SetSpeedKpAddKp(builder, kp)

def SetSpeedKpEnd(builder):
    return builder.EndObject()

def End(builder):
    return SetSpeedKpEnd(builder)


class SetSpeedKpT(object):

    # SetSpeedKpT
    def __init__(self):
        self.kp = 0.0  # type: float

    @classmethod
    def InitFromBuf(cls, buf, pos):
        setSpeedKp = SetSpeedKp()
        setSpeedKp.Init(buf, pos)
        return cls.InitFromObj(setSpeedKp)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, setSpeedKp):
        x = SetSpeedKpT()
        x._UnPack(setSpeedKp)
        return x

    # SetSpeedKpT
    def _UnPack(self, setSpeedKp):
        if setSpeedKp is None:
            return
        self.kp = setSpeedKp.Kp()

    # SetSpeedKpT
    def Pack(self, builder):
        SetSpeedKpStart(builder)
        SetSpeedKpAddKp(builder, self.kp)
        setSpeedKp = SetSpeedKpEnd(builder)
        return setSpeedKp
