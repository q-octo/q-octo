namespace QOcto.WSSchema; // Web Server Schema

// Define enums for control sources and status codes
enum ControlSource : byte { Manual, FlightController, OnboardComputer, RC }
enum Status : byte { OK, INIT, NOTX, BAT, TEMP, OFF }

// Define a table for motor information
table Motor {
    temperature: float = 0.0;
    rps: float = 0.0;
    angle: float = 0.0;
}

// Define a table for the motors group
table Motors {
    motor1: Motor;
    motor2: Motor;
}

// Define the main table for your data structure
table Robot {
    batteries: int = 4;
    control_source: ControlSource = RC;
    status: Status = OK;
    motors: Motors;
    voltage: float = 0.0;
    current: float = 0.0;
    fuel: float = 0.0;
    rssi: float = 0.0;
    signal_strength: int = 0;
    max_speed: float = 0.0;
    low_voltage_threshold: float = 12.0;
    critical_voltage_threshold: float = 16.0;
    reference_wheel_angle: int = 0;
    motor_error_code: string; // Defaults not supported in C++
    wheels_folded: bool = false;
    enable_rover: bool = false;
}

// Update tables for individual fields
table UpdateBatteries {
    batteries: int;
}

table UpdateLowVoltageThreshold {
    low_voltage_threshold: float;
}

table UpdateCriticalVoltageThreshold {
    critical_voltage_threshold: float;
}

table UpdateReferenceWheelAngle {
    reference_wheel_angle: int;
}

table UpdateWheelsFolded {
    wheels_folded: bool;
}

table UpdateEnableRover {
    enable_rover: bool;
}

// Define the root type and possible update types
root_type Robot;

// Optional: Define a union for updates if single endpoint for updates is required
union Update {
    UpdateBatteries,
    UpdateLowVoltageThreshold,
    UpdateCriticalVoltageThreshold,
    UpdateReferenceWheelAngle,
    UpdateWheelsFolded,
    UpdateEnableRover
}
